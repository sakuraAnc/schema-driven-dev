plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.openapi.generator' version '6.4.0'
}

// OpenAPI Generator を使用してスキーマを構文からドキュメントを生成するための Gradle タスク
task buildApiDoc(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "html2"
    inputSpec = "$projectDir/src/main/resources/api-schema.yml"
    outputDir = "$buildDir/apidoc"
}
// OpenAPI Generator を使用して Spring Boot の API サーバーのコードを自動生成するための Gradle タスク
task buildSpringServer(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "spring"
    inputSpec = "$projectDir/src/main/resources/api-schema.yml"
	outputDir = "$buildDir/spring"
    apiPackage = "com.example.todoapi.controller"
    modelPackage = "com.example.todoapi.model"
    configOptions = [
		interfaceOnly: "true",
		useSpringBoot3: "true"
	]
}

// OpenAPI のスキーマを構文チェックする
openApiValidate {
	inputSpec = "$rootDir/src/main/resources/api-schema.yml"
}
// Java のコンパイル前に OpenAPI Generator でコードを生成
compileJava.dependsOn tasks.buildSpringServer
//  生成された API コードをコンパイル対象に含める
sourceSets.main.java.srcDir "$buildDir/spring/src/main/java"

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0
	implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.8'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
